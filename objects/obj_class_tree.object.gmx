<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-60</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
temp_allocated = ds_list_create();

tree_start_x = 0;
tree_start_y = 0;

mouse_inside_tree = false;
mouse_inside_confirm = false;
mouse_inside_cancel = false;

skill_points = global.available_skill_points;

for(var i=0;i&lt;9;i++)
{
    for(var j=0;j&lt;9;j++)
    {
        if(!(i==4 &amp;&amp; j==4)) //Exclude Starting Point
        {
            if(scr_check_allocated(global.class,i,j)) skill_points--; 
        }
        
        
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init Tree Info

//Init Empty
for(var i=0;i&lt;9;i++)
{
    for(var j=0;j&lt;9;j++)
    {
        tree_array[i,j] = ds_map_create();
        ds_map_add(tree_array[i,j],"sprite",spr_class_tree_empty);
        ds_map_add(tree_array[i,j],"description","");
        ds_map_add(tree_array[i,j],"name","");
    }
}


switch(global.class)
{
    case "Mage":
    

    //Tree Info
    //sprites
    ds_map_replace(tree_array[4,4],"sprite",spr_class_tree_start);
    ds_map_replace(tree_array[2,0],"sprite",spr_class_tree_mage_fireball_projectile);
    ds_map_replace(tree_array[3,0],"sprite",spr_class_tree_mage_fireball_damage);
    ds_map_replace(tree_array[4,0],"sprite",spr_class_tree_mage_fireball_projectile);
    ds_map_replace(tree_array[5,0],"sprite",spr_class_tree_mage_bground_damage);
    ds_map_replace(tree_array[6,0],"sprite",spr_class_tree_mage_fireball_projectile);
    ds_map_replace(tree_array[2,1],"sprite",spr_class_tree_mage_fireball_damage);
    ds_map_replace(tree_array[3,1],"sprite",spr_class_tree_mage_fireball_speed);
    ds_map_replace(tree_array[4,1],"sprite",spr_class_tree_mage_flameblast_size);
    ds_map_replace(tree_array[5,1],"sprite",spr_class_tree_mage_bground_damage);
    ds_map_replace(tree_array[6,1],"sprite",spr_class_tree_mage_fireball_speed);
    ds_map_replace(tree_array[2,2],"sprite",spr_class_tree_mage_fireball_damage);
    ds_map_replace(tree_array[3,2],"sprite",spr_class_tree_mage_fireball_speed);
    ds_map_replace(tree_array[4,2],"sprite",spr_class_tree_mage_flameblast_size);
    ds_map_replace(tree_array[5,2],"sprite",spr_class_tree_mage_fireball_projectile);
    ds_map_replace(tree_array[6,2],"sprite",spr_class_tree_mage_fireball_speed);
    ds_map_replace(tree_array[0,3],"sprite",spr_class_tree_mage_bground_slow);
    ds_map_replace(tree_array[1,3],"sprite",spr_class_tree_mage_bground_damage);
    ds_map_replace(tree_array[2,3],"sprite",spr_class_tree_mage_bground_damage);
    ds_map_replace(tree_array[3,3],"sprite",spr_class_tree_mage_fireball_damage);
    ds_map_replace(tree_array[4,3],"sprite",spr_class_tree_mage_fireball_pierce);
    ds_map_replace(tree_array[5,3],"sprite",spr_class_tree_mage_fireball_pierce);
    ds_map_replace(tree_array[6,3],"sprite",spr_class_tree_mage_fireball_pierce);
    ds_map_replace(tree_array[7,3],"sprite",spr_class_tree_mage_flameblast_damage);
    ds_map_replace(tree_array[2,4],"sprite",spr_class_tree_mage_chargeup_cooldown);
    ds_map_replace(tree_array[3,4],"sprite",spr_class_tree_mage_bground_damage);
    ds_map_replace(tree_array[5,4],"sprite",spr_class_tree_mage_bground_size);
    ds_map_replace(tree_array[6,4],"sprite",spr_class_tree_mage_flameblast_size);
    ds_map_replace(tree_array[7,4],"sprite",spr_class_tree_mage_flameblast_size);
    ds_map_replace(tree_array[8,4],"sprite",spr_class_tree_mage_flameblast_debuff);
    ds_map_replace(tree_array[2,5],"sprite",spr_class_tree_mage_chargeup_cooldown);
    ds_map_replace(tree_array[3,5],"sprite",spr_class_tree_mage_bground_size);
    ds_map_replace(tree_array[4,5],"sprite",spr_class_tree_mage_tower_firerate);
    ds_map_replace(tree_array[5,5],"sprite",spr_class_tree_mage_bground_duration);
    ds_map_replace(tree_array[6,5],"sprite",spr_class_tree_mage_bground_duration);
    ds_map_replace(tree_array[7,5],"sprite",spr_class_tree_mage_flameblast_size);
    ds_map_replace(tree_array[8,5],"sprite",spr_class_tree_mage_flameblast_damage);
    ds_map_replace(tree_array[1,6],"sprite",spr_class_tree_mage_chargeup_charge);
    ds_map_replace(tree_array[2,6],"sprite",spr_class_tree_mage_blink_charge);
    ds_map_replace(tree_array[3,6],"sprite",spr_class_tree_mage_bground_size);
    ds_map_replace(tree_array[4,6],"sprite",spr_class_tree_mage_tower_firerate);
    ds_map_replace(tree_array[5,6],"sprite",spr_class_tree_mage_bground_duration);
    ds_map_replace(tree_array[6,6],"sprite",spr_class_tree_mage_bground_duration);
    ds_map_replace(tree_array[7,6],"sprite",spr_class_tree_mage_flameblast_size);
    ds_map_replace(tree_array[8,6],"sprite",spr_class_tree_mage_flameblast_bground);
    ds_map_replace(tree_array[1,7],"sprite",spr_class_tree_mage_blink_buff);
    ds_map_replace(tree_array[2,7],"sprite",spr_class_tree_mage_bground_size);
    ds_map_replace(tree_array[3,7],"sprite",spr_class_tree_mage_bground_size);
    ds_map_replace(tree_array[4,7],"sprite",spr_class_tree_mage_tower_firerate);
    ds_map_replace(tree_array[5,7],"sprite",spr_class_tree_mage_tower_duration);
    ds_map_replace(tree_array[6,7],"sprite",spr_class_tree_mage_tower_duration);
    ds_map_replace(tree_array[7,7],"sprite",spr_class_tree_mage_tower_duration);
    ds_map_replace(tree_array[6,8],"sprite",spr_class_tree_mage_tower_aura);
    
    
    
    //description
    ds_map_replace(tree_array[2,0],"description","Adds an additional Projectile to Fireball");
    ds_map_replace(tree_array[3,0],"description","20% increased Fireball Damage");
    ds_map_replace(tree_array[4,0],"description","Adds an additional Projectile to Fireball");
    ds_map_replace(tree_array[5,0],"description","30% increased Burning Ground Damage");
    ds_map_replace(tree_array[6,0],"description","Adds an additional Projectile to Fireball");
    ds_map_replace(tree_array[2,1],"description","20% increased Fireball Damage");
    ds_map_replace(tree_array[3,1],"description","20% increased Fireball Speed");
    ds_map_replace(tree_array[4,1],"description","25% increased Flameblast Size");
    ds_map_replace(tree_array[5,1],"description","30% increased Burning Ground Damage");
    ds_map_replace(tree_array[6,1],"description","20% increased Fireball Speed");
    ds_map_replace(tree_array[2,2],"description","20% increased Fireball Damage");
    ds_map_replace(tree_array[3,2],"description","20% increased Fireball Speed");
    ds_map_replace(tree_array[4,2],"description","25% increased Flameblast Size");
    ds_map_replace(tree_array[5,2],"description","Adds an additional Projectile to Fireball");
    ds_map_replace(tree_array[6,2],"description","20% increased Fireball Speed");
    ds_map_replace(tree_array[0,3],"description","Burning Ground Slows Enemies by 50%");
    ds_map_replace(tree_array[1,3],"description","30% increased Burning Ground Damage");
    ds_map_replace(tree_array[2,3],"description","30% increased Burning Ground Damage");
    ds_map_replace(tree_array[3,3],"description","20% increased Fireball Damage");
    ds_map_replace(tree_array[4,3],"description","Fireball has 20% additional chance to Pierce Enemies");
    ds_map_replace(tree_array[5,3],"description","Fireball has 20% additional chance to Pierce Enemies");
    ds_map_replace(tree_array[6,3],"description","Fireball has 20% additional chance to Pierce Enemies");
    ds_map_replace(tree_array[7,3],"description","20% increased Flameblast Damage");
    ds_map_replace(tree_array[2,4],"description","20% reduced Cooldown on Charge Up");
    ds_map_replace(tree_array[3,4],"description","30% increased Burning Ground Damage");
    ds_map_replace(tree_array[5,4],"description","30% increased Burning Ground Size");
    ds_map_replace(tree_array[6,4],"description","25% increased Flameblast Size");
    ds_map_replace(tree_array[7,4],"description","25% increased Flameblast Size");
    ds_map_replace(tree_array[8,4],"description","Flameblast applies a Debuff to Enemies# which can be triggered by Fireball# to deal 50% increased Damage");
    ds_map_replace(tree_array[2,5],"description","20% reduced Cooldown on Charge Up");
    ds_map_replace(tree_array[3,5],"description","30% increased Burning Ground Size");
    ds_map_replace(tree_array[4,5],"description","10% faster Fire Rate for Fire Towers");
    ds_map_replace(tree_array[5,5],"description","50% longer Burning Ground Duration");
    ds_map_replace(tree_array[6,5],"description","50% longer Burning Ground Duration");
    ds_map_replace(tree_array[7,5],"description","25% increased Flameblast Size");
    ds_map_replace(tree_array[8,5],"description","20% increased Flameblast Damage");
    ds_map_replace(tree_array[1,6],"description","Charge Up replenishes 2 extra Charges");
    ds_map_replace(tree_array[2,6],"description","Blink can hold up to 1 additional Charge");
    ds_map_replace(tree_array[3,6],"description","30% increased Burning Ground Size");
    ds_map_replace(tree_array[4,6],"description","10% faster Fire Rate for Fire Towers");
    ds_map_replace(tree_array[5,6],"description","50% longer Burning Ground Duration");
    ds_map_replace(tree_array[6,6],"description","50% longer Burning Ground Duration");
    ds_map_replace(tree_array[7,6],"description","25% increased Flameblast Size");
    ds_map_replace(tree_array[8,6],"description","Flameblast leaves Burning Ground on hit");
    ds_map_replace(tree_array[1,7],"description","After using Blink# gain a 50% Damage Buff for 2 Seconds");
    ds_map_replace(tree_array[2,7],"description","30% increased Burning Ground Size");
    ds_map_replace(tree_array[3,7],"description","30% increased Burning Ground Size");
    ds_map_replace(tree_array[4,7],"description","10% faster Fire Rate for Fire Towers");
    ds_map_replace(tree_array[5,7],"description","Fire Towers last 25% longer");
    ds_map_replace(tree_array[6,7],"description","Fire Towers last 25% longer");
    ds_map_replace(tree_array[7,7],"description","Fire Towers last 25% longer");
    ds_map_replace(tree_array[6,8],"description","Fire Towers emit an Aura# which lets your Charges recharge twice as fast");
    break;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set States
with(obj_player_parent) state_switch("Cutscene");
with(obj_camera) state_switch("Fixed Player");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_player_parent) state_switch_previous();
with(obj_camera) state_switch("Loose Player");

//Delete DS
for(var i=0;i&lt;9;i++)
{
    for(var j=0;j&lt;9;j++)
    {
            ds_map_destroy(tree_array[i,j]);
    }
}

for(var i=0;i&lt;ds_list_size(temp_allocated);i++)
{
    ds_map_destroy(temp_allocated[| i]);
}
ds_list_destroy(temp_allocated);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouse Info
tree_start_x = view_xview[0]+(view_wview[0]/2)-288;
tree_start_y = view_yview[0]+64;
mouse_inside_tree = (mouse_x &gt;= tree_start_x &amp;&amp; mouse_x &lt;= tree_start_x+(64*9)-2 &amp;&amp; mouse_y &gt;= tree_start_y &amp;&amp; mouse_y &lt;= tree_start_y+(64*9)-2);
mouse_inside_confirm = (mouse_x &gt;= tree_start_x &amp;&amp; mouse_x &lt;= tree_start_x+128 &amp;&amp; mouse_y &gt;= tree_start_y-64 &amp;&amp; mouse_y &lt;= tree_start_y);
mouse_inside_cancel = (mouse_x &gt;= tree_start_x+128 &amp;&amp; mouse_x &lt;= tree_start_x+256 &amp;&amp; mouse_y &gt;= tree_start_y-64 &amp;&amp; mouse_y &lt;= tree_start_y);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Allocating
if(mouse_check_button_pressed(mb_left) &amp;&amp; mouse_inside_tree)
{
    var xx = ((mouse_x-tree_start_x) div 64);
    var yy = ((mouse_y-tree_start_y) div 64);
    //if field valid
    if(scr_check_allocateable(xx,yy))
    {
        if(!scr_check_temp_allocated(xx,yy) &amp;&amp; skill_points &gt; 0)
        {
            ds_list_add(temp_allocated,ds_map_create());
            ds_map_add(temp_allocated[| ds_list_size(temp_allocated)-1],"xx",xx);
            ds_map_add(temp_allocated[| ds_list_size(temp_allocated)-1],"yy",yy);
            
            skill_points--;
        }
        else if(scr_check_temp_allocated(xx,yy))
        {
            if(scr_check_temp_allocated_removeable(xx,yy))
            {
                scr_remove_temp_allocated(xx,yy);
                skill_points++;
            }
        }  
    }
     
}






</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Buttons
//Cancel
if(mouse_check_button_pressed(mb_left) &amp;&amp; mouse_inside_cancel)
{
    for(var i=0;i&lt;ds_list_size(temp_allocated);i++)
    {
        ds_map_destroy(temp_allocated[| i]);
        skill_points++;
    }
    ds_list_destroy(temp_allocated);
    temp_allocated = ds_list_create();
}

//Confirm
if(mouse_check_button_pressed(mb_left) &amp;&amp; mouse_inside_confirm)
{
    for(var i=0;i&lt;ds_list_size(temp_allocated);i++)
    {
        var xx = ds_map_find_value(temp_allocated[| i],"xx");
        var yy = ds_map_find_value(temp_allocated[| i],"yy");
        mage_tree[# xx,yy] = true;
        scr_allocate_skill_points(xx,yy,"Mage");
        ds_map_destroy(temp_allocated[| i]);
    }
    ds_list_destroy(temp_allocated);
    temp_allocated = ds_list_create();
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the tree

switch(global.class)
{
    case "Mage":
         for(var i=0;i&lt;9;i++)
         {
             for(var j=0;j&lt;9;j++)
             {
                   //Blend
                   if(scr_check_allocated(global.class,i,j)) image_blend=c_white;
                   else if(scr_check_temp_allocated(i,j)) image_blend = c_yellow;
                   else image_blend=c_gray;
                   
                   draw_sprite_ext(scr_get_mage_tree_info(i,j,"sprite"),-1,tree_start_x+(64*i),tree_start_y+(64*j),image_xscale,image_yscale,image_angle,image_blend,image_alpha);
             }
         }
         if(mouse_inside_tree) //mouse is in bounds of tree
         {
             draw_set_halign(fa_center);
             draw_set_valign(fa_top);
             
             var str = scr_get_mage_tree_info((mouse_x-tree_start_x) div 64, (mouse_y-tree_start_y) div 64,"description");
             draw_set_color(c_black);
             if(str != "") draw_rectangle(mouse_x-(string_width(str)/2),mouse_y+32,mouse_x+(string_width(str)/2),mouse_y+32+(string_height(str)),false);
             draw_set_color(c_white);
             draw_text_transformed(mouse_x,mouse_y+32,str,1,1,image_angle);
         }
         
    break;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Buttons
if(!ds_list_empty(temp_allocated)) image_blend=c_white; else image_blend=c_gray;
draw_sprite_ext(spr_class_tree_confirm,-1,tree_start_x+64,tree_start_y-32,image_xscale,image_yscale,image_angle,image_blend,image_alpha);

draw_sprite_ext(spr_class_tree_cancel,-1,tree_start_x+192,tree_start_y-32,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Points
draw_set_halign(fa_left);
scr_text_outlined_scaled(tree_start_x+288,tree_start_y-32,"Points Available: "+string(skill_points),c_white,c_black,1,1);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset Tree
for(var i=0;i&lt;9;i++)
{
    for(var j=0;j&lt;9;j++)
    {
        if(mage_tree[# i,j] == true &amp;&amp; !(i == 4 &amp;&amp; j == 4))
        {
            mage_tree[# i,j] = false;
            scr_deallocate_skill_points(i,j,"Mage");
            skill_points++;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
