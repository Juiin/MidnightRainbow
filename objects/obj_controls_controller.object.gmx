<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
message = "";
message_color = c_white;
rebind = false;
key_id_to_rebind = -1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Buttons
scr_button_create(1110,670,spr_menu_button,"Back",scr_button_options,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rebinding
if(mouse_check_button_released(mb_left))
{
    for(var i=0;i&lt;array_length_1d(key);i++)
    {
        if(scr_mouse_inside_key(i,0))
        {
            message = "Press Any Key to Rebind it to "+ key_name[i];
            message_color = c_red;
            keyboard_lastkey = -1;
            rebind = true;
            key_id_to_rebind = i;
        }
        else if(scr_mouse_inside_key(i,1))
        {
           key[i] = default_key[i];
           message = key_name[i] + " rebound to default(" + string(default_key[i]) + ")";
           message_color = c_green; 
        }
    }
}


if(rebind)
{
    if(keyboard_lastkey != -1)
    {
        if(scr_key_already_in_use(keyboard_lastkey))
        {
            rebind = false;
            key_id_to_rebind = -1;
            message = scr_keycode_to_char(keyboard_lastkey) + " already in use!";
            message_color = c_orange;
        }
        else
        {
            key[key_id_to_rebind] = keyboard_lastkey;
            message = key_name[key_id_to_rebind] + " rebound to " + scr_keycode_to_char(keyboard_lastkey);
            message_color = c_green;
            rebind = false;
            key_id_to_rebind = -1;
        }
    }  
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_set_halign(fa_left);
for(var i=0;i&lt;array_length_1d(key);i++)
{
    draw_sprite(spr_controls,0,20,10+(i*58));
    if(scr_mouse_inside_key(i,0)) draw_sprite(spr_controls,1,20,10+(i*58));
    if(scr_mouse_inside_key(i,1)) draw_sprite(spr_controls,2,20,10+(i*58));
    draw_text(25,18+(i*58),key_name[i]);
    draw_set_halign(fa_center);
    draw_text(910,18+(i*58),scr_keycode_to_char(key[i]));
    draw_text(1100,18+(i*58),"Default");
    draw_set_halign(fa_left);
}

scr_text_outlined_scaled(50,655,message,message_color,c_black,1,1);


draw_set_halign(fa_center);
draw_set_color(c_black);


//DEBUG
scr_text_outlined_scaled(50,600,string(keyboard_lastkey),c_white,c_black,1,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
