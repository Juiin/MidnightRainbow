<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_crafting</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-41</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>craft_item = EMPTY;


//Mouse Variables
stats_start_x = 0;
stats_start_y = 0;
options_start_x = 0;
options_start_y = 0;
mouse_in_craft_slot = false;


//Blends
reroll_blend = c_gray;
augment_blend = c_gray;
revalue_blend = c_gray;
rarity_blend = c_gray;


reroll_active = false;
augment_active = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///keep in view
x = view_xview[view_current]+(view_wview[view_current]/2);
y = view_yview[view_current]+(view_hview[view_current]/2);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

stats_start_x = view_xview[view_current]+367;
stats_start_y = view_yview[view_current]+194;

options_start_x = view_xview[view_current]+109;
options_start_y = view_yview[view_current]+194;
mouse_in_craft_slot = scr_pos_inside(mouse_x,mouse_y,view_xview[view_current]+538,view_yview[view_current]+97,view_xview[view_current]+622,view_yview[view_current]+181);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Movement
if(instance_exists(obj_stash) &amp;&amp; !reroll_active &amp;&amp; !augment_active)
{
    if(mouse_in_craft_slot)
    {
        if(mouse_check_button_pressed(mb_left))
        {
            if(craft_item != EMPTY)
            {
                if(obj_stash.mouse_item != EMPTY)
                {
                    var temp = obj_stash.mouse_item;
                    obj_stash.mouse_item = craft_item;
                    craft_item = temp;
                }
                else if(obj_stash.mouse_item == EMPTY)
                {
                    obj_stash.mouse_item = craft_item;
                    craft_item = EMPTY;
                }
            }
            else if(obj_stash.mouse_item != EMPTY)
            {
                craft_item = obj_stash.mouse_item;
                obj_stash.mouse_item = EMPTY;   
            }
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Crafting

if(craft_item != EMPTY &amp;&amp; !reroll_active &amp;&amp; !augment_active)
{
    var item_rarity = craft_item[? "rarity"];
    //Reroll
    var reroll_cost = craft_item[? "reroll_cost"];
    if(global.gold &gt;= reroll_cost &amp;&amp; item_rarity &gt; 1)
    {
        reroll_blend = c_white;
        
        if(scr_pos_inside(mouse_x,mouse_y,options_start_x,options_start_y,options_start_x+247,options_start_y+64))
        {
            if(mouse_check_button_pressed(mb_left))
            {
                global.gold-=reroll_cost;
                reroll_active = true;
                craft_item[? "reroll_cost"]+=100;
            }
        }
    }  
    else reroll_blend = c_gray
    //Augment
    var augment_cost = craft_item[? "augment_cost"];
    var any_stats_less_4 = false;
    for(var i=0;i&lt;craft_item[? "rarity"];i++)
    {
        if(craft_item[? "Stat_"+string(i)+"_tier"] &lt; 4)
        {
            any_stats_less_4 = true;
            break;
        }
    }
    
    if(global.gold &gt;= augment_cost &amp;&amp; any_stats_less_4)
    {
        augment_blend = c_white;
        if(scr_pos_inside(mouse_x,mouse_y,options_start_x,options_start_y+64,options_start_x+247,options_start_y+64+64))
        {
            if(mouse_check_button_pressed(mb_left))
            {
                global.gold-=augment_cost;
                augment_active = true;
                craft_item[? "augment_cost"]+=200;
            }
        }
    }
    else augment_blend = c_gray;
    //Revalue
    var revalue_cost = craft_item[? "revalue_cost"];
    if(global.gold &gt;= revalue_cost)
    {
        revalue_blend = c_white;
        if(scr_pos_inside(mouse_x,mouse_y,options_start_x,options_start_y+64+64,options_start_x+247,options_start_y+64+64+64))
        {
            if(mouse_check_button_pressed(mb_left))
            {
                global.gold-=revalue_cost;
                scr_reroll_stat_values(craft_item);
                craft_item[? "revalue_cost"]+=50;
            }
        }
    }
    else revalue_blend = c_gray;
    
    //Increase Rarity
    var rarity_cost = craft_item[? "rarity_cost"];
    
    if(global.gold &gt;= rarity_cost &amp;&amp; item_rarity &lt; 4)
    {
        rarity_blend = c_white;
        if(scr_pos_inside(mouse_x,mouse_y,options_start_x,options_start_y+64+64+64,options_start_x+247,options_start_y+64+64+64+64))
        {
            if(mouse_check_button_pressed(mb_left))
            {
                global.gold-=rarity_cost;
                scr_add_stat(craft_item);
                if(craft_item[? "rarity"] &gt;= 4) rarity_blend = c_gray;
                craft_item[? "rarity_cost"]+=300;
            }
        }
    }
    else rarity_blend = c_gray;
}

//Actual Rerolling/Augmenting
if(reroll_active)
{
    if(mouse_check_button_pressed(mb_left))
    {
        for(var i=1;i&lt;craft_item[? "rarity"];i++)
        {
            if(scr_pos_inside(mouse_x,mouse_y,stats_start_x,stats_start_y+(i*106),stats_start_x+444,stats_start_y+106+(i*106)))
            {
                scr_reroll_stat(craft_item,i)
                reroll_active = false;
            }
        }
    }
}
else if(augment_active)
{
    if(mouse_check_button_pressed(mb_left))
    {
        for(var i=0;i&lt;craft_item[? "rarity"];i++)
        {
            if(craft_item[? "Stat_"+string(i)+"_tier"] &lt; 4)
            {
                if(scr_pos_inside(mouse_x,mouse_y,stats_start_x,stats_start_y+(i*106),stats_start_x+444,stats_start_y+106+(i*106)))
                {
                    scr_increase_stat_tier(craft_item,i)
                    augment_active = false;
                }
            }
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blend
if(craft_item == EMPTY || reroll_active || augment_active)
{
    reroll_blend = c_gray;
    augment_blend = c_gray;
    revalue_blend = c_gray;
    rarity_blend = c_gray;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
///Draw Item + Stats

draw_set_halign(fa_left);
if(craft_item != EMPTY)
{
    //Draw Item
    var craft_item_x = view_xview[view_current]+538+16;
    var craft_item_y = view_yview[view_current]+97+16;
    //Item sprite
    switch(ds_map_find_value(craft_item,"type"))
    {
        case "red":
        draw_sprite(spr_red_item,-1,craft_item_x,craft_item_y)
        break;
        case "yellow":
        draw_sprite(spr_yellow_item,-1,craft_item_x,craft_item_y)
        break;
        case "blue":
        draw_sprite(spr_blue_item,-1,craft_item_x,craft_item_y)
        break;
        case "green":
        draw_sprite(spr_green_item,-1,craft_item_x,craft_item_y)
        break;
        case "purple":
        draw_sprite(spr_purple_item,-1,craft_item_x,craft_item_y)
        break;
    }
    //Border Sprite
    switch(ds_map_find_value(craft_item,"rarity"))
    {
        case 1 :
        draw_sprite(spr_white_border,-1,craft_item_x,craft_item_y)
        break;
        case 2:
        draw_sprite(spr_blue_border,-1,craft_item_x,craft_item_y)
        break;
        case 3:
        draw_sprite(spr_yellow_border,-1,craft_item_x,craft_item_y)
        break;
        case 4:
        draw_sprite(spr_legendary_border,-1,craft_item_x,craft_item_y)
        break;
    }

    
    //Draw Stats
    for(var i=0;i&lt;ds_map_find_value(craft_item,"rarity");i++)
    {
           var str = "";
           var stat_type = craft_item[? "Stat_"+string(i)+"_type"];
           var stat_value = craft_item[? "Stat_"+string(i)+"_value"];
           var stat_tier = craft_item[? "Stat_"+string(i)+"_tier"];
           
           str = string_insert(scr_get_stat_string(stat_type,stat_value,stat_tier,0,false),str,string_length(str)-1);
           
           var low = low_roll[stat_tier,scr_get_stat_id(stat_type)];
           var high = high_roll[stat_tier,scr_get_stat_id(stat_type)];
           str = string_insert("#("+string(low)+"-"+string(high)+")",str,string_length(str)-1);
           
           var blend = c_white;
           if(reroll_active &amp;&amp; i!=0) blend = c_yellow;
           if(augment_active &amp;&amp; stat_tier &lt; 4) blend = c_yellow;
           
           scr_text_outlined_scaled(stats_start_x,stats_start_y+(i*106),str,blend,c_black,1,1);
           
    }
    
    //Draw Crafting Costs
    var reroll_cost = craft_item[? "reroll_cost"];
    var augment_cost = craft_item[? "augment_cost"];
    var revalue_cost = craft_item[? "revalue_cost"];
    var rarity_cost = craft_item[? "rarity_cost"];
    scr_text_outlined_scaled(options_start_x,options_start_y+24,"Cost: "+string(reroll_cost),reroll_blend,c_black,1,1);
    scr_text_outlined_scaled(options_start_x,options_start_y+24+64,"Cost: "+string(augment_cost),augment_blend,c_black,1,1);
    scr_text_outlined_scaled(options_start_x,options_start_y+24+64+64,"Cost: "+string(revalue_cost),revalue_blend,c_black,1,1);
    scr_text_outlined_scaled(options_start_x,options_start_y+24+64+64+64,"Cost: "+string(rarity_cost),rarity_blend,c_black,1,1);
}

//Draw Options
scr_text_outlined_scaled(options_start_x,options_start_y,"Reroll Stat",reroll_blend,c_black,1,1);
scr_text_outlined_scaled(options_start_x,options_start_y+64,"Augment Stat",augment_blend,c_black,1,1);
scr_text_outlined_scaled(options_start_x,options_start_y+64+64,"Reroll Values",revalue_blend,c_black,1,1);
scr_text_outlined_scaled(options_start_x,options_start_y+64+64+64,"Increase Rarity",rarity_blend,c_black,1,1);
draw_set_halign(fa_center);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
